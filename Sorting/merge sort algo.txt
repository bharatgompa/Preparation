#include<bits/stdc++.h>
using namespace std;

// merge sort algo

class Solution{
private:
public:
    void merge(vector<int> &arr,int low,int mid,int high)
    {
        vector<int> k;
        int left=low,right=mid+1;
        while(left<=mid and right<=high)
        {
            if(arr[left]<=arr[right])
            {
                k.push_back(arr[left++]);
            }
            else
            {
                k.push_back(arr[right++]);
            }
        }
        while(left<=mid)
        {
            k.push_back(arr[left++]);
        }
        while(right<=high)
        {
            k.push_back(arr[right++]);
        }
        for(int i=low;i<=high;i++)
        {
            arr[i]=k[i-low];
        }
    }
    void mergeSort(vector<int> &arr,int low,int high)
    {
        if(low<high)
        {
            int mid=low+(high-low)/2;
            mergeSort(arr,low,mid);
            mergeSort(arr,mid+1,high);
            merge(arr,low,mid,high);
        }
    }
};
int main()
{
    vector<int> arr={3,4,5,2,1};
    for(auto it:arr)
    {
        cout<<it<<" ";
    }
    cout<<endl;
    int n=arr.size();
    Solution solution;
    solution.mergeSort(arr,0,n-1);
    for(auto it:arr)
    {
        cout<<it<<" ";
    }
}





