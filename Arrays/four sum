#include<bits/stdc++.h>
using namespace std;

// 4 sum problem
// find quadraplets which equals sum equsls to given target

class Solution{
private:
public:
    vector<vector<int>> fourSum(vector<int> &arr,int &target)
    {
        vector<vector<int>> res;
        sort(begin(arr),end(arr));
        int n=arr.size();
        for(int i=0;i<n-3;i++)
        {
            if(i>0 and arr[i]==arr[i-1]) continue;
            for(int j=i+1;j<n-2;j++)
            {
                if(j>i+1 and arr[j]==arr[j-1]) continue;
                int k=j+1,l=n-1;
                while(k<l)
                {
                    int sum=arr[i]+arr[j]+arr[k]+arr[l];
                    if(sum==target)
                    {
                        res.push_back({arr[i],arr[j],arr[k],arr[l]});
                        k++;
                        l--;
                        while(k<l and arr[k]==arr[k-1]) k++;
                        while(k<l and arr[l]==arr[l+1]) l--;
                    }
                    else if(sum<target)
                    {
                        k++;
                    }
                    else
                    {
                        l--;
                    }
                }
            }
        }
        return res;
    }
};
int main()
{
    vector<int> arr={1,0,-1,0,-2,2};
    for(auto it:arr)
    {
        cout<<it<<" ";
    }
    cout<<endl;
    int target;
    cin>>target;
    Solution solution;
    auto res=solution.fourSum(arr,target);
    for(auto it:res)
    {
        for(auto i:it)
        {
            cout<<i<<" ";
        }
        cout<<endl;
    }
}
