#include<bits/stdc++.h>
using namespace std;

//Given a sorted array where only one element will be single and other all will be occuring twice

class Solution{
private:
public:
    int findUnique(vector<int> &arr)
    {
        int n=arr.size();
        if(n==1) return arr[0];
        if(arr[0]!=arr[1]) return arr[0];
        if(arr[n-1]!=arr[n-2]) return arr[n-1];
        
        int low=1,high=n-2;
        
        while(low<=high)
        {
            int mid=low+(high-low)/2;
            if(arr[mid]!=arr[mid-1] and arr[mid]!=arr[mid+1])
            {
                return arr[mid];
            }
            if((mid%2==0 and arr[mid]==arr[mid+1]) or
               (mid%2==1 and arr[mid]==arr[mid-1]))
            {
               low=mid+1;
            }
            else
            {
                high=mid-1;
            }
        }
        return -1;
    }
};
int main()
{
    vector<int> arr={1,1,2,2,3,3,4,5,5,6,6};
    for(auto it:arr)
    {
        cout<<it<<" ";
    }
    cout<<endl;
    Solution solution;
    auto res=solution.findUnique(arr);
    cout<<res<<endl;
}

