#include<bits/stdc++.h>
using namespace std;

// given a sorted array which is rotated at some pivot point p which is unknown and may contain duplicates .. if found the element return true or else false

class Solution{
private:
public:
    int searchInRotatedSortedArray2(vector<int> &arr,int k)
    {
        int n=arr.size(),low=0,high=n-1;
        while(low<=high)
        {
            int mid=low+(high-low)/2;
            if(arr[mid]==k)
            {
                return true;
            }
            if(arr[low]==arr[mid] and arr[mid]==arr[high])
            {
                low=low+1;
                high=high-1;
                continue;
            }
            else if(arr[low]<=arr[mid])
            {
                if(arr[low]<=k and k<=arr[mid])
                {
                    high=mid-1;
                }
                else
                {
                    low=mid+1;
                }
            }
            else
            {
                if(arr[mid]<=k and k<=arr[high])
                {
                    low=mid+1;
                }
                else
                {
                    high=mid-1;
                }
            }
        }
        return false;
    }
};
int main()
{
    vector<int> arr={7, 8, 1, 2, 3, 3, 3, 4, 5, 6};
    for(auto it:arr)
    {
        cout<<it<<" ";
    }
    cout<<endl;
    int k=3;
    Solution solution;
    auto res=solution.searchInRotatedSortedArray2(arr,k);
    cout<<res<<endl;
}

