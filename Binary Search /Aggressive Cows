#include<bits/stdc++.h>
using namespace std;

// given k cows .. place them such that minimum distance is maximum possible

class Solution{
private:
public:
    bool solve(vector<int> &arr,int mid,int k)
    {
        int count=1,last=arr[0];
        for(int i=1;i<arr.size();i++)
        {
            if(arr[i]-last >= mid)
            {
                count++;
                last=arr[i];
            }
            if(count>=k)
            {
                return true;
            }
        }
        return false;
    }
    int agressiveCows(vector<int> &arr,int k)
    {
        sort(begin(arr),end(arr));
        int n=arr.size(),low=1,high=arr[n-1]-arr[0],res=0;
        while(low<=high)
        {
            int mid=low+(high-low)/2;
            if(solve(arr,mid,k))
            {
                res=mid;
                low=mid+1;
            }
            else
            {
                high=mid-1;
            }
        }
        return res;
    }
};
int main()
{
    vector<int> arr={4,2,1,3,6};
    for(auto it:arr)
    {
        cout<<it<<" ";
    }
    cout<<endl;
    int k=2;
    Solution solution;
    auto res=solution.agressiveCows(arr,k);
    cout<<"minimum possible maximum distance is : "<<res<<endl;
}

